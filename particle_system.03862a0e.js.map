{"mappings":"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","sources":["src/assets/js/particle_system.js","node_modules/@swc/helpers/src/_class_call_check.mjs","node_modules/@swc/helpers/src/_create_class.mjs","src/assets/css/particle_system/particle_system.module.scss"],"sourcesContent":["import * as particle_system_styles from '../css/particle_system/particle_system.module.scss';\n\nclass ValueNoiseGenerator {\n    constructor(max_value, max_steps) {\n        this.value = Math.random() * max_value;\n        this.next_value = Math.random() * max_value;\n        this.next_value_steps = Math.floor((Math.sqrt(Math.random()) * (max_steps - 1)) + 1);\n        this.max_value = max_value;\n        this.max_steps = max_steps;\n        this.step_num = 0;\n    }\n    ease(a, b, t) {\n        return a + (b - a) * t; //linear interp for now\n    }\n    getValue() {\n        let value = this.ease(this.value, this.next_value, this.step_num / this.next_value_steps);\n        //console.log(this.value, this.next_value, this.step_num, this.next_value_steps, value);\n        this.step_num++;\n        if (this.step_num == this.next_value_steps) {\n            this.step_num = 0;\n            this.value = this.next_value;\n            this.next_value = Math.random() * this.max_value;\n            this.next_value_steps = Math.floor((Math.sqrt(Math.random()) * (this.max_steps - 1)) + 1);\n        }\n        return value;\n    }\n}\n\nconst particleSay = (text, parentElement, x, y, lifetime) => {\n    let element = document.createElement('span');\n    element.innerText = text;\n    element.classList.add('particle-system-text');\n    parentElement.appendChild(element);\n    element.style.top = y + 'px';\n    element.style.left = x + 'px';\n    element.style.animationDuration = lifetime / 1000 + 's';\n    setTimeout(element.remove.bind(element), lifetime);\n    return element;\n}\nconst particlesSay = (text, particles, lifetime) => {\n    let elements = [];\n    let parentElement = particles[0]._parentSystem.text_element;\n    for (let i = 0; i < particles.length; i++) {\n        let element = document.createElement('span');\n        element.classList.add('particle-system-text');\n        element.style.top = particles[i]._y + 'px';\n        element.style.left = particles[i]._x + 'px';\n        element.style.animationDuration = lifetime / 1000 + 's';\n        element.innerText = text;\n        elements.push(element);\n        parentElement.appendChild(element);\n    }\n    setTimeout(() => {\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].remove();\n        }\n    }, lifetime);\n    return elements;\n}\n\n\nclass UtterancesObject {\n    constructor(utterances) {\n        this.particles = [];\n        this.utterances = utterances;\n        this.utterance_index = 0\n        this.is_speaking = false;\n    }\n    add_particle(particle) {\n        this.particles.push(particle);\n    }\n    make_utterance() {\n        if (this.particles.length == 0) {\n            this.is_speaking = false;\n            return false;\n        }\n        let utterance = this.utterances[this.utterance_index];\n        particlesSay(utterance[0], this.particles, utterance[1] * 1000);\n        this.utterance_index++;\n        return this.utterance_index < this.utterances.length;\n    }\n    speak() {\n        if (this.make_utterance()) {\n            this.is_speaking = true;\n            setTimeout(this.speak.bind(this), this.utterances[this.utterance_index - 1][1] * 1000);\n        } else {\n            this.is_speaking = false;\n            this.utterance_index = 0;\n        }\n    }\n    speakIn(time) {\n        if (!this.is_speaking) {\n            if (this.speakTimeout || false) clearTimeout(this.speakTimeout);\n            this.speakTimeout = setTimeout(this.speak.bind(this), time);\n        }\n    }\n}\n\nclass Particle {\n    constructor(parentElement, parentSystem) {\n        this._speed = Particle.SPEED;\n        this._parentSystem = parentSystem;\n        this._x = Math.random() * this._parentSystem.width;\n        this._y = Math.random() * this._parentSystem.height;\n        this._z_generator = new ValueNoiseGenerator(10, 100);\n        this._z = this._z_generator.getValue() + 10;\n        //this.brightness = new ValueNoiseGenerator(1, 100);\n        this._theta_generator = new ValueNoiseGenerator(Math.PI * 2, 500);\n        this._theta = this._theta_generator.getValue();\n\n        this.element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this.element.setAttribute(\"cx\", this._x);\n        this.element.setAttribute(\"cy\", this._y);\n        this.element.setAttribute(\"r\", this._z / 2);\n        this.element.setAttribute(\"opacity\", Math.min(2 / (this._z), 1));\n        this.element.setAttribute(\"fill\", \"#ffff00\");\n        parentElement.appendChild(this.element);\n    }\n    update() {\n        //particle calculation logic\n        this._x = (this._x + (Math.cos(this._theta) * this._speed) + this._parentSystem.width) % this._parentSystem.width;\n        this._y = (this._y + (Math.sin(this._theta) * this._speed) + this._parentSystem.height) % this._parentSystem.height;\n        this._theta = this._theta_generator.getValue();//Math.random() * 0.2 - 0.1;\n        //console.log(this._theta);\n        this._speed += (Math.random() - Math.random()) * 0.1;\n        this._speed = Particle.SPEED + (this._speed - Particle.SPEED) * (this.SPEED > Particle.SPEED ? 0.998 : 0.95);\n        this._z = this._z_generator.getValue() + 10;\n\n        //if(Math.random() > 0.999) particleSay(\"Hello!\", this._parentSystem.text_element, this._x, this._y, 1000);\n\n        //actual UI update\n        this.element.setAttribute(\"cx\", this._x);\n        this.element.setAttribute(\"cy\", this._y);\n        this.element.setAttribute(\"r\", this._z / 2);\n        this.element.setAttribute(\"opacity\", Math.min(2 / (this._z), 1));\n    }\n    sayUtterances(utterances, delay_start) {\n        //console.log(utterances);\n        utterances.add_particle(this);\n        utterances.speakIn(delay_start);\n    }\n    raycast(origin_x, origin_y, direction_x, direction_y) {\n        //TODO: implement raycast\n    }\n}\nParticle.SPEED = 1;\nParticle.WIDTH = 15;\nclass ParticleSystem {\n    constructor(numParticles) {\n\n        this._ticknum = 0;\n\n        this.width = window.innerWidth - Particle.WIDTH;\n        this.height = document.body.scrollHeight - Particle.WIDTH;\n\n        this.element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        this.element.classList.add(particle_system_styles.particle_system);\n        this.element.style.height = this.height + 'px';\n        this.element.style.zIndex = -10000;\n        //add child to beginning (push to start)\n        document.body.children.length > 0 ? document.body.insertBefore(this.element, document.body.children[0]) : document.body.appendChild(this.element);\n        this.text_element = document.createElement('div');\n        this.text_element.classList.add(particle_system_styles.particle_system_text);\n        this.text_element.style.height = this.height + 'px';\n        this.text_element.style.zIndex = -10000;\n        document.body.children.length > 0 ? document.body.insertBefore(this.text_element, document.body.children[0]) : document.body.appendChild(this.text_element);\n\n        this.particles = [];\n        let addParticle = () => {\n            this.particles.push(new Particle(this.element, this));\n        }\n        for (let i = 0; i < numParticles; i++) {\n            setTimeout(addParticle, i);\n        }\n        this.update_this = this.update.bind(this);\n        requestAnimationFrame(this.update_this);\n        window.addEventListener('resize', this.on_resize.bind(this));\n    }\n    on_resize() {\n        this.width = window.innerWidth;\n        this.height = document.body.scrollHeight;\n        this.element.style.height = this.height + 'px';\n        this.text_element.style.height = this.height + 'px';\n    }\n    update() {\n        for (let i = 0; i < this.particles.length; i++) {\n            this.particles[i].update();\n        }\n        this._ticknum++;\n        requestAnimationFrame(this.update_this);\n    }\n    // raycast(origin_x, origin_y, direction_x, direction_y) {\n    //     let closest_t = -1;\n    //     let closest = null;\n    //     for (let i = 0; i < this.particles.length; i++) {\n    //         let t = this.particles[i].raycast(origin_x, origin_y, direction_x, direction_y);\n    //         if (t > 0 && (closest_t < 0 || t < closest_t)) {\n    //             closest_t = t;\n    //             closest = this.particles[i];\n    //         }\n    //     }\n    //     return closest, closest_t;\n    // }\n}\n\n// const UtterancesLibrary = {\n//     rick_utterances: new UtterancesObject([[\"We're\", 0.3800000000000001], ['no', 0.2699999999999998], ['strangers', 0.24], ['to', 0.29000000000000004], ['love', 2.83], ['You', 0.33000000000000007], ['know', 0.22999999999999954], ['the', 0.25], ['rules', 0.6900000000000004], ['and', 0.3600000000000003], ['so', 0.40999999999999925], ['do', 0.3600000000000003], ['I', 1.63], ['A', 0.2900000000000009], ['full', 0.21999999999999886], [\"commitment's\", 0.5099999999999998], ['what', 0.2599999999999998], [\"I'm\", 0.7900000000000009], ['thinking', 0.3200000000000003], ['of', 1.8100000000000005], ['you', 0.3299999999999983], [\"wouldn't\", 0.4800000000000004], ['get', 0.2599999999999998], ['this', 0.25], ['from', 0.46000000000000085], ['any', 0.40000000000000036], ['other', 0.4800000000000004], ['guy', 1.2099999999999973], ['I', 1.3000000000000007], ['just', 0.3500000000000014], ['wanna', 0.259999999999998], ['tell', 0.25], ['you', 0.2900000000000027], ['how', 0.5399999999999991], [\"I'm feeling gotta make you understand\", 0.25], ['never', 0.41999999999999815], ['gonna', 1.620000000000001], ['give', 0.39000000000000057], ['you', 0.23999999999999844], ['up', 0.2700000000000031], ['never', 0.4299999999999997], ['gonna', 0.34999999999999787], ['let', 0.2699999999999996], ['you', 0.6900000000000013], ['down', 0.23999999999999844], ['never', 0.18000000000000327], ['gonna', 0.2699999999999996], ['run', 0.2699999999999996], ['around', 0.4299999999999997], ['and', 0.7399999999999984], ['desert', 0.23000000000000043], ['you', 0.16000000000000014], ['never', 0.3200000000000003], ['hi', 0.25], ['hi', 0.35999999999999943], ['hi', 0.6900000000000013], ['hi', 0.259999999999998], ['hi', 0.15000000000000213], ['hi', 0.16000000000000014], ['hi', 0.17999999999999972], ['hi', 0.35999999999999943], ['hi', 0.3500000000000014], ['hi', 0.48999999999999844], ['hi', 0.5000000000000036], ['hi', 0.3399999999999963], ['hi', 0.39000000000000057], ['hi', 1.1400000000000006], ['hi', 0.240000000000002], ['hi', 0.17999999999999972], ['hi', 0.28999999999999915], ['hi', 0.28999999999999915], ['hi', 0.36999999999999744], ['hi', 0.7899999999999991], ['hi', 0.2600000000000051], ['hi', 0.14999999999999858], ['hi', 0.269999999999996], ['hi', 0.37000000000000455], ['hi', 0.3200000000000003], ['hi', 0.7299999999999969], ['hi', 0.21000000000000085], ['hi', 0.14000000000000057], ['hi', 0.0799999999999983], ['hi', 0.20000000000000284], ['hi', 0.4200000000000017], ['hi', 0.29999999999999716], ['hi', 0.6099999999999994], ['hi', 0.4200000000000017], ['hi', 0.3399999999999963], ['hi', 0.4299999999999997], ['hi', 1.0]]),\n// };\n// export {ParticleSystem, Particle, UtterancesLibrary};\n\nexport { ParticleSystem, Particle };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","@use '../utils/variables' as *;\n\n/*particle system*/\n.particle_system {\n    z-index: -2;\n    position: absolute;\n    overflow: hidden;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n}\n\n@keyframes fade-out {\n    0% {\n        opacity: 1;\n    }\n\n    100% {\n        opacity: 0;\n    }\n}\n\n.particle_system_text {\n    position: absolute;\n    overflow: hidden;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    font-size: 1rem;\n    font-weight: bold;\n    color: $textColor;\n    text-shadow: 1px 2px 0.5rem #0066ff;\n    opacity: 0.2;\n    animation: fade-out ease-in-out forwards;\n    animation-duration: 1s;\n\n    @media (prefers-reduced-motion) {\n        animation: none !important;\n    }\n}"],"names":["$71mVs","parcelRequire","$b60e4d919710b3f1$var$ValueNoiseGenerator","ValueNoiseGenerator","max_value","max_steps","this","value","Math","random","next_value","next_value_steps","floor","sqrt","step_num","key","a","b","t","ease","$b60e4d919710b3f1$export$c36c68baa13912a5","Particle","parentElement","parentSystem","_speed","SPEED","_parentSystem","_x","width","_y","height","_z_generator","_z","getValue","_theta_generator","PI","_theta","element","document","createElementNS","setAttribute","min","appendChild","cos","sin","utterances","delay_start","add_particle","speakIn","origin_x","origin_y","direction_x","direction_y","WIDTH","$b60e4d919710b3f1$export$f219b6a0e4bb0b6d","ParticleSystem","numParticles","_ticknum","window","innerWidth","body","scrollHeight","classList","add","$jzQ7v","particle_system","style","zIndex","children","length","insertBefore","text_element","createElement","particle_system_text","particles","addParticle","_this","push","i","setTimeout","update_this","update","bind","requestAnimationFrame","addEventListener","on_resize","$7a6698bbb9b6cf57$export$2e2bcd8739ae039","instance","Constructor","TypeError","$345e8126ea21d802$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","$345e8126ea21d802$export$2e2bcd8739ae039","protoProps","staticProps","prototype","$e409b724bef649dc$export$85cb8b56a426a9e3","$e409b724bef649dc$export$f562fd61c53bdcd9","$e409b724bef649dc$export$cd4d499015bc84a4"],"version":3,"file":"particle_system.03862a0e.js.map"}