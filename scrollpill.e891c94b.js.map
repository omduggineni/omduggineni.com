{"mappings":"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","sources":["<anon>","src/assets/js/scrollpill.js","node_modules/@swc/helpers/esm/_define_property.js"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"cpwtJ\", function(module, exports) {\n\n$parcel$export(module.exports, \"ScrollPill\", function () { return $9091036bd6d62074$export$180a60dd364660b1; });\n\nvar $2oEMT = parcelRequire(\"2oEMT\");\nlet $9091036bd6d62074$var$virtualScrollEndEvent = null;\nfunction $9091036bd6d62074$var$virtualScrollEndCheck() {\n    //check if the \"scrollend\" event exists\n    if (\"onscrollend\" in window) //console.log(\"scrollend event exists\");\n    //return the default scrollend event\n    return \"scrollend\";\n    //console.log(\"scrollend event does not exist\");\n    if (!$9091036bd6d62074$var$virtualScrollEndEvent) $9091036bd6d62074$var$virtualScrollEndEvent = new CustomEvent(\"scrollend\");\n    let scrollend_event_timeout = null;\n    let virtualScrollListener = null;\n    window.addEventListener(\"scroll\", virtualScrollListener = ()=>{\n        clearTimeout(scrollend_event_timeout);\n        scrollend_event_timeout = setTimeout(()=>{\n            //alert(\"scrollend dispatch\")\n            window.dispatchEvent($9091036bd6d62074$var$virtualScrollEndEvent);\n        }, 100);\n    });\n    return $9091036bd6d62074$var$virtualScrollEndEvent;\n}\n$9091036bd6d62074$var$virtualScrollEndCheck();\nwindow.addEventListener(\"scrollend\", ()=>{\n//alert(\"scrollend\");\n});\nclass $9091036bd6d62074$var$ScrollPillNavbar {\n    registerEvents() {\n        this.sections.forEach(([section_element, section])=>{\n            section_element.addEventListener('click', (event)=>{\n                //console.log('click');\n                this.disable();\n                //this.scrollpill.closeOnScroll = false;\n                $9091036bd6d62074$var$virtualScrollEndCheck();\n                window.addEventListener('scrollend', ()=>{\n                    this.enable();\n                //this.scrollpill.closeOnScroll = true;\n                }, {\n                    once: true\n                });\n            });\n        });\n    }\n    updateActiveSection() {\n        let newActiveSection;\n        if (this.scrollpill.state == this.scrollpill.state_machine.AT_BOTTOM) newActiveSection = this.sections[this.sections.length - 1];\n        else newActiveSection = this.sections.findLast(([section_element, section])=>{\n            //console.log(section.getBoundingClientRect().top, window.innerHeight / 2, section.getBoundingClientRect().top < window.innerHeight / 2);\n            return section.getBoundingClientRect().top < window.innerHeight / 2;\n        });\n        if (newActiveSection != null) {\n            if (this.activeSection != null) this.activeSection[0].classList.remove(\"scrollpill-navbar-active-section\");\n            newActiveSection[0].classList.add(\"scrollpill-navbar-active-section\");\n        } else if (this.activeSection != null) this.activeSection[0].classList.remove(\"scrollpill-navbar-active-section\");\n        this.activeSection = newActiveSection;\n    }\n    show() {\n        if (this.is_open) return;\n        //this.element.style.display = 'block';\n        this.scrollpill.element.classList.add('scrollpill-open');\n        this.is_open = true;\n    }\n    hide() {\n        if (!this.is_open) return;\n        //this.element.style.display = 'none';\n        this.scrollpill.element.classList.remove('scrollpill-open');\n        this.is_open = false;\n    }\n    forceHide() {\n        if (!this.is_open) return;\n        //this.element.style.display = 'none';\n        this.scrollpill.element.classList.remove('scrollpill-open');\n        this.is_open = false;\n    }\n    toggle() {\n        if (this.is_open) this.hide();\n        else this.show();\n    }\n    disable() {\n        if (this.disabled) return;\n        this.oldShow = this.show;\n        this.oldHide = this.hide;\n        this.show = ()=>{};\n        this.hide = ()=>{};\n        this.disabled = true;\n    }\n    enable() {\n        this.disabled = false;\n        this.show = this.oldShow;\n        this.hide = this.oldHide;\n    }\n    constructor(element, scrollpill){\n        this.scrollpill = scrollpill;\n        scrollpill.element.classList.add('scrollpill-open');\n        this.element = element;\n        this.is_open = true;\n        this.sections = [\n            ...this.element.querySelectorAll('a')\n        ].map((element)=>{\n            return [\n                element,\n                document.getElementById(element.getAttribute('href').substring(1))\n            ];\n        }).filter(([element, section])=>{\n            return section != null;\n        });\n        this.activeSection = null;\n        this.registerEvents();\n        this.disabled = false;\n    }\n}\nclass $9091036bd6d62074$var$ScrollPillElement {\n    registerEventHandlers() {\n        window.addEventListener('scroll', this.onScrollUpdate.bind(this));\n        window.addEventListener('resize', this.onScrollUpdate.bind(this));\n        window.addEventListener('orientationchange', this.onScrollUpdate.bind(this));\n        this.element.addEventListener('click', this.onClick.bind(this));\n        window.addEventListener('scroll', this.navbar.updateActiveSection.bind(this.navbar));\n    }\n    updateState(state) {\n        this.element.classList.remove(this.state);\n        this.element.classList.add(state);\n        this.state = state;\n        //force restyle\n        this.element.offsetHeight;\n    }\n    percentage2screenpx(percentage) {\n        //console.log(percentage);\n        let remaining_screen_space = window.innerHeight - this.element_height * 1.775;\n        //console.log(remaining_screen_space, window.innerHeight, this.element_height);\n        return percentage / 100 * remaining_screen_space + 'px';\n    }\n    percentage2windowpx(percentage) {\n        return percentage / 100 * (document.body.scrollHeight - window.innerHeight);\n    }\n    onScrollUpdate(event) {\n        const scrollY = window.scrollY;\n        const scrollHeight = document.body.scrollHeight;\n        const windowHeight = window.innerHeight;\n        const scrollPercentage = scrollY / (scrollHeight - windowHeight) * 100;\n        //console.log(scrollY, scrollHeight, windowHeight, scrollPercentage);\n        this.scrollPercentage = scrollPercentage;\n        this.element.style.top = this.percentage2screenpx(scrollPercentage);\n        if (scrollPercentage == 0) {\n            this.updateState(this.state_machine.AT_TOP);\n            this.navbar.show();\n        } else if (scrollPercentage >= 99.75) {\n            this.updateState(this.state_machine.AT_BOTTOM);\n            this.navbar.forceHide();\n        } else {\n            this.updateState(this.state_machine.AT_MIDDLE);\n            this.navbar.hide();\n        }\n    }\n    onPercentageUpdate(percentage, { scrollBehavior: scrollBehavior = 'instant' } = {}) {\n        // scroll the window to the correct position\n        window.scrollTo({\n            right: 0,\n            top: this.percentage2windowpx(percentage),\n            behavior: scrollBehavior\n        });\n        this.onScrollUpdate();\n    }\n    onClick(event) {\n        //check if event.target is a child of scrollpill-navbar\n        if (this.navbar.element.contains(event.target)) return;\n        if (this.state == this.state_machine.AT_BOTTOM) {\n            this.navbar.disable();\n            this.onPercentageUpdate(0, {\n                scrollBehavior: 'smooth'\n            });\n            $9091036bd6d62074$var$virtualScrollEndCheck();\n            window.addEventListener('scrollend', ()=>{\n                this.navbar.enable();\n                this.navbar.show();\n            }, {\n                once: true\n            });\n            return;\n        }\n        if (this.navbar.is_open) {\n            this.element.blur();\n            this.navbar.hide();\n        } else {\n            this.element.focus();\n            this.navbar.show();\n        }\n    }\n    constructor(element){\n        (0, $2oEMT._)(this, \"state_machine\", {\n            AT_TOP_FIRST: 'scrollpill-at-top-first',\n            AT_TOP: 'scrollpill-at-top',\n            AT_MIDDLE: 'scrollpill-at-middle',\n            AT_BOTTOM: 'scrollpill-at-bottom'\n        });\n        this.element = element;\n        this.element_height = element.getBoundingClientRect().height;\n        this.navbar = new $9091036bd6d62074$var$ScrollPillNavbar(element.querySelector('.scrollpill-navbar'), this);\n        // this.navbar.show();\n        // this.navbar.disable();\n        element.appendChild(this.navbar.element);\n        element.classList.add('scrollpill');\n        element.classList.add('scrollpill-at-top-first');\n        this.state = this.state_machine.AT_TOP_FIRST;\n        this.scrollPercentage = 0;\n        //this.closeOnScroll = true;\n        this.registerEventHandlers();\n        this.navbar.show();\n    }\n}\nclass $9091036bd6d62074$export$180a60dd364660b1 {\n    constructor(element_id, options){\n        let element = document.getElementById(element_id);\n        this.element = new $9091036bd6d62074$var$ScrollPillElement(element);\n        this.options = options !== null && options !== void 0 ? options : {};\n    }\n}\n\n});\nparcelRegister(\"2oEMT\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $1bed763f92e2a32e$export$71511d61b312f219; });\nfunction $1bed763f92e2a32e$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n});\n\n\n})();\n//# sourceMappingURL=scrollpill.e891c94b.js.map\n","let virtualScrollEndEvent = null;\nfunction virtualScrollEndCheck() {\n    //check if the \"scrollend\" event exists\n    if (\"onscrollend\" in window) {\n        //console.log(\"scrollend event exists\");\n        //return the default scrollend event\n        return \"scrollend\";\n    }\n    //console.log(\"scrollend event does not exist\");\n    \n    if(!virtualScrollEndEvent) {\n        virtualScrollEndEvent = new CustomEvent(\"scrollend\");\n    }\n    let scrollend_event_timeout = null;\n    let virtualScrollListener = null;\n    window.addEventListener(\"scroll\", virtualScrollListener = () => {\n        clearTimeout(scrollend_event_timeout);\n        scrollend_event_timeout = setTimeout(() => {\n            //alert(\"scrollend dispatch\")\n            window.dispatchEvent(virtualScrollEndEvent);\n        }, 100);\n    });\n\n    return virtualScrollEndEvent;\n}\n\n\n\nvirtualScrollEndCheck();\nwindow.addEventListener(\"scrollend\", () => {\n    //alert(\"scrollend\");\n})\n\n\n\nclass ScrollPillNavbar {\n    constructor(element, scrollpill) {\n        this.scrollpill = scrollpill;\n        scrollpill.element.classList.add('scrollpill-open');\n        this.element = element;\n        this.is_open = true;\n        this.sections = [...this.element.querySelectorAll('a')].map((element) => {\n            return [element, document.getElementById(element.getAttribute('href').substring(1))];\n        }).filter(([element, section]) => {\n            return section != null;\n        });\n        this.activeSection = null;\n        this.registerEvents();\n        this.disabled = false;\n    }\n    registerEvents() {\n        this.sections.forEach(([section_element, section]) => {\n            section_element.addEventListener('click', (event) => {\n                //console.log('click');\n                this.disable();\n                //this.scrollpill.closeOnScroll = false;\n                virtualScrollEndCheck();\n                window.addEventListener('scrollend', () => {\n                    this.enable();\n                    //this.scrollpill.closeOnScroll = true;\n                }, { once: true });\n            });\n        });\n    }\n    updateActiveSection() {\n        let newActiveSection;\n        if (this.scrollpill.state == this.scrollpill.state_machine.AT_BOTTOM) {\n            newActiveSection = this.sections[this.sections.length - 1];\n        } else {\n            newActiveSection = this.sections.findLast(([section_element, section]) => {\n                //console.log(section.getBoundingClientRect().top, window.innerHeight / 2, section.getBoundingClientRect().top < window.innerHeight / 2);\n                return section.getBoundingClientRect().top < window.innerHeight / 2;\n            });\n        }\n        if (newActiveSection != null) {\n            if (this.activeSection != null) {\n                this.activeSection[0].classList.remove(\"scrollpill-navbar-active-section\");\n            }\n            newActiveSection[0].classList.add(\"scrollpill-navbar-active-section\");\n        } else {\n            if (this.activeSection != null) {\n                this.activeSection[0].classList.remove(\"scrollpill-navbar-active-section\");\n            }\n        }\n        this.activeSection = newActiveSection;\n    }\n    show() {\n        if(this.is_open) return;\n        //this.element.style.display = 'block';\n        this.scrollpill.element.classList.add('scrollpill-open');\n        this.is_open = true;\n    }\n    hide() {\n        if(!this.is_open) return;\n        //this.element.style.display = 'none';\n        this.scrollpill.element.classList.remove('scrollpill-open');\n        this.is_open = false;\n    }\n    forceHide() {\n        if (!this.is_open) return;\n        //this.element.style.display = 'none';\n        this.scrollpill.element.classList.remove('scrollpill-open');\n        this.is_open = false;\n    }\n    toggle() {\n        if(this.is_open) this.hide();\n        else this.show();\n    }\n    disable() {\n        if(this.disabled) return;\n        this.oldShow = this.show;\n        this.oldHide = this.hide;\n        this.show = () => { };\n        this.hide = () => { };\n        this.disabled = true;\n    }\n    enable() {\n        this.disabled = false;\n        this.show = this.oldShow;\n        this.hide = this.oldHide;\n    }\n}\n\nclass ScrollPillElement {\n    state_machine = {\n        AT_TOP_FIRST: 'scrollpill-at-top-first',\n        AT_TOP: 'scrollpill-at-top',\n        AT_MIDDLE: 'scrollpill-at-middle',\n        AT_BOTTOM: 'scrollpill-at-bottom',\n    };\n    constructor(element) {\n        this.element = element;\n        this.element_height = element.getBoundingClientRect().height;\n        this.navbar = new ScrollPillNavbar(element.querySelector('.scrollpill-navbar'), this);\n        // this.navbar.show();\n        // this.navbar.disable();\n        element.appendChild(this.navbar.element);\n        element.classList.add('scrollpill');\n        element.classList.add('scrollpill-at-top-first');\n        this.state = this.state_machine.AT_TOP_FIRST;\n        this.scrollPercentage = 0;\n        //this.closeOnScroll = true;\n \n        this.registerEventHandlers();\n        this.navbar.show();\n    }\n    registerEventHandlers() {\n        window.addEventListener('scroll', this.onScrollUpdate.bind(this));\n        window.addEventListener('resize', this.onScrollUpdate.bind(this));\n        window.addEventListener('orientationchange', this.onScrollUpdate.bind(this));\n        this.element.addEventListener('click', this.onClick.bind(this));\n        window.addEventListener('scroll', this.navbar.updateActiveSection.bind(this.navbar));\n    }\n    updateState(state) {\n        this.element.classList.remove(this.state);\n        this.element.classList.add(state);\n        this.state = state;\n        //force restyle\n        this.element.offsetHeight;\n    }\n    percentage2screenpx(percentage) {\n        //console.log(percentage);\n        let remaining_screen_space = window.innerHeight - this.element_height * 1.775;\n        //console.log(remaining_screen_space, window.innerHeight, this.element_height);\n        \n        return ((percentage/100) * remaining_screen_space) + 'px';\n    }\n    percentage2windowpx(percentage) {\n        return (percentage / 100) * (document.body.scrollHeight - window.innerHeight);\n    }\n    onScrollUpdate(event) {\n        const scrollY = window.scrollY;\n        const scrollHeight = document.body.scrollHeight;\n        const windowHeight = window.innerHeight;\n\n\n        const scrollPercentage = (scrollY / (scrollHeight - windowHeight)) * 100;\n        //console.log(scrollY, scrollHeight, windowHeight, scrollPercentage);\n\n\n        this.scrollPercentage = scrollPercentage;\n        this.element.style.top = this.percentage2screenpx(scrollPercentage);\n        if(scrollPercentage == 0){\n            this.updateState(this.state_machine.AT_TOP);\n            this.navbar.show();\n        } else if (scrollPercentage >= 99.75) {\n            this.updateState(this.state_machine.AT_BOTTOM);\n            this.navbar.forceHide();\n        } else {\n            this.updateState(this.state_machine.AT_MIDDLE);\n            this.navbar.hide();\n        }\n    }\n    onPercentageUpdate(percentage, {scrollBehavior = 'instant'} = {}) {\n        // scroll the window to the correct position\n        window.scrollTo({\n            right: 0, top: this.percentage2windowpx(percentage), behavior: scrollBehavior\n        });\n        this.onScrollUpdate();\n    }\n    onClick(event) {\n        //check if event.target is a child of scrollpill-navbar\n        if (this.navbar.element.contains(event.target)) return;\n        if (this.state == this.state_machine.AT_BOTTOM) {\n            this.navbar.disable();\n            this.onPercentageUpdate(0, { scrollBehavior: 'smooth' });\n            virtualScrollEndCheck();\n            window.addEventListener('scrollend', () => {\n                this.navbar.enable();\n                this.navbar.show();\n            }, { once: true });\n            return;\n        }\n\n        if (this.navbar.is_open) {\n            this.element.blur();\n            this.navbar.hide();\n        } else {\n            this.element.focus();\n            this.navbar.show();\n        }\n    }\n}\n\nclass ScrollPill{\n    constructor(element_id, options) {\n        let element = document.getElementById(element_id);\n        this.element = new ScrollPillElement(element);\n        this.options = options ?? {};\n    }\n}\n\nexport {ScrollPill};","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","$9091036bd6d62074$export$180a60dd364660b1","$2oEMT","$9091036bd6d62074$var$virtualScrollEndEvent","$9091036bd6d62074$var$virtualScrollEndCheck","CustomEvent","scrollend_event_timeout","addEventListener","clearTimeout","setTimeout","dispatchEvent","$9091036bd6d62074$var$ScrollPillNavbar","registerEvents","sections","forEach","section_element","section","event","disable","enable","once","updateActiveSection","newActiveSection","scrollpill","state","state_machine","AT_BOTTOM","length","findLast","getBoundingClientRect","top","innerHeight","activeSection","classList","remove","add","show","is_open","element","hide","forceHide","toggle","disabled","oldShow","oldHide","constructor","querySelectorAll","map","document","getElementById","getAttribute","substring","filter","$9091036bd6d62074$var$ScrollPillElement","registerEventHandlers","onScrollUpdate","bind","onClick","navbar","updateState","offsetHeight","percentage2screenpx","percentage","element_height","percentage2windowpx","body","scrollHeight","scrollY","scrollPercentage","style","AT_TOP","AT_MIDDLE","onPercentageUpdate","scrollBehavior","scrollTo","right","behavior","contains","target","blur","focus","_","AT_TOP_FIRST","height","querySelector","appendChild","element_id","options","$1bed763f92e2a32e$export$71511d61b312f219","obj","key","value","writable"],"version":3,"file":"scrollpill.e891c94b.js.map"}